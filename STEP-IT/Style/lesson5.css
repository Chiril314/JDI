.container{
    background-color: black;
    padding: 10px;
    width:500px;
    margin: auto;
    display: grid;
    grid-template-columns: repeat(5, 70px);
    grid-auto-columns: 50px;
    /* grid-template-rows: 50px 75px 125px 300px 10px 60px;
    grid-auto-rows: 50px;   
    grid-gap: 0px; */
}
.child{
    width: 100px;
    height: 100px;
}
.one{
    background-color: red;
    /* grid-row: 1 / 3; */
}
.two{
    background-color: blue;
    /* grid-column: 1 / 4; */
}
.three{
    background-color: green;
}
.four{
    background-color: yellow;
}
.five{
    background-color: purple;
}
.six{
    background-color: orange;
}

/*
    z-index - proprietatea care controleaza suprapunerea elementelor unul peste altul, cu cat mai mare valoarea, cu atat mai tare se suprapun
    grid-template-row - setam marimea si cantitatea randurilor, daca elementele sunt mai multe decat cele numerate aici, randul se va crea oricum,
        doar ca se va duce direct dupa element
    gird-template-column: repeat(6, 100px); - setam marimea si cantitatea coloanelor care formeaza celulele noastre din plasa, cate coloane vor fi, atatea elemente
        o sa mearga unul dupa altul intr-un rand, in cazul in care sunt prea multe coloane, ele vor iesi din granitele container-ului
    grid-template-column: repeat(2, 1fr); - fractie unitate de masura speciala care permite impartirea exact egala a container-ului pentru elemente
    grid-column: 1 / 3; - indica cate linii de coloane sa ocupe elementul
    grid-auto-rows - proprietatea care permite ajustarea inaltimii randurilor la elemente
    grid-auto-columns - proprietatea care permite ajustarea latimii coloanelor la elemente
    */